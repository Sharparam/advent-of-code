# BEGIN: DIGIT 1
w = input[0] # inp w

# BEGIN: X
# x = 0 # mul x 0
# x += z # add x z
# x %= 26 # mod x 26
# z /= 1 # div z 1
# x += 14 # add x 14
# x = x == w ? 1 : 0 # eql x w
# x = x == 0 ? 1 : 0 # eql x 0
# OPTIMIZE:
# x = 1 # x is reset on the next block, so this is essentially a NOP
# END: X

# BEGIN: Y
# y *= 0 # mul y 0
# y += 25 # add y 25
# y *= x # mul y x
# y += 1 # add y 1
# z *= y # mul z y
# y *= 0 # mul y 0
# y += w # add y w
# y += 12 # add y 12
# y *= x # mul y x
# z += y # add z y
# OPTIMIZE:
# y = 25 * x + 1 # x is always 1 here
# z *= y # z is still 0 here, this is essentially z = 0
# y = (w + 12) * x # x is always 1 here
# z += y
# OPTIMIZE 2:
z = w + 12
# END: Y

# END: DIGIT 1

# BEGIN: DIGIT 2
w = input[1] # inp w
# x = 0 # mul x 0
x = z # add x z
x %= 26 # mod x 26
# div z 1
x += 10 # add x 10
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
# y = 0 # mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
# y = 0 # mul y 0
y = w # add y w
y += 9 # add y 9
y *= x # mul y x
z += y # add z y
# OPTIMIZE 1:
w = input[1]
x = z % 26 + 10
# at this point x is at least 10
# x will never equal w
# x = 0 # x = x == w ? 1 : 0
x = 1 # x = x == 0 ? 1 : 0

# y = 26
# z *= y
z *= 26
#y = w + 9
#z += y
z += w + 9

# END: DIGIT 2

# BEGIN: DIGIT 3
w = input[2] # inp w
# x = 0 # mul x 0
x = z # add x z
x %= 26 # mod x 26
# div z 1
x += 13 # add x 13
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0

# y = 0 # mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
# y = 0 # mul y 0
y = w # add y w
y += 8 # add y 8
y *= x # mul y x
z += y # add z y
# OPTIMIZE 1:
# x = z % 26 + 13 # x is at least 13
# x = 0 # x = x == w ? 1 : 0 # >= 13 will never equal w
# x = 1 # x = x == 0 ? 1 : 0

z *= 26
z += w + 8
# END: DIGIT 3

# BEGIN: DIGIT 4
# w = input[3] # inp w
# x = 0 # mul x 0
# x = z # add x z
# x %= 26 # mod x 26
# z /= 26 # div z 26
# x -= 8 # add x -8
# x = x == w ? 1 : 0 # eql x w
# x = x == 0 ? 1 : 0 # eql x 0
# y = 0 # mul y 0
# y = 25 # add y 25
# y *= x # mul y x
# y += 1 # add y 1
# z *= y # mul z y
# y = 0 # mul y 0
# y = w # add y w
# y += 3 # add y 3
# y *= x # mul y x
# z += y # add z y
# OPTIMIZE 1:
w = input[3]
x = z % 26 - 8
z /= 26
x = x == w ? 1 : 0
x = x == 0 ? 1 : 0
z = z * (25 * x + 1) + (w + 3) * x
# END: DIGIT 4

# BEGIN: DIGIT 5
w = input[4] # inp w
# x = 0 # mul x 0
x = z # add x z
x %= 26 # mod x 26
# div z 1
x += 11 # add x 11
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
# y = 0 # mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
# y = 0 # mul y 0
y = w # add y w
# add y 0
y *= x # mul y x
z += y # add z y
# OPTIMIZED:
# x = z % 26 + 11
# x = 0 # x = x == w ? 1 : 0 # x is at least 11, never equal to w
# x = 1 # x = x == 0 ? 1 : 0
# y = 26
# z *= 26
# y = w
# z += w
z = z * 26 + w
# END: DIGIT 5

# BEGIN: DIGIT 6
w = input[5] # inp w
# x = 0 # mul x 0
x = z # add x z
x %= 26 # mod x 26
# div z 1
x += 11 # add x 11
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
# y = 0 # mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
# y = 0 # mul y 0
y = w # add y w
y += 11 # add y 11
y *= x # mul y x
z += y # add z y
# OPTIMIZE:
w = input[5]
# x = z % 26 + 11 # x never equal w
x = 1
z *= 26
z += w + 11
z = z * 26 + w + 11
# END: DIGIT 6

# BEGIN: DIGIT 7
w = input[6] # inp w
# x = 0 # mul x 0
x = z # add x z
x %= 26 # mod x 26
# div z 1
x += 14 # add x 14
#eql x w
#eql x 0
#mul y 0
y = 25 # add y 25
#mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 10 # add y 10
#mul y x
z + = y # add z y
# OPTIMIZE:
x = 1
z *= 26
z += w + 10
z = z * 26 + input[6] + 10
# END: DIGIT 7

# BEGIN: DIGIT 8
w = input[7] # inp w
#mul x 0
x = z # add x z
x %= 26 # mod x 26
z /= 26 # div z 26
x -= 11 # add x -11
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
#mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 13 # add y 13
y *= x # mul y x
z += y # add z y
# OPTIMIZED:
w = input[7]
x = z % 26 - 11
z /= 26
x = x == w ? 1 : 0
x = x == 0 ? 1 : 0
z = z * (25 * x + 1) + (w + 13) * x
# END: DIGIT 8

# BEGIN: DIGIT 9
w = input[8] # inp w
#mul x 0
x = z # add x z
x %= 26 # mod x 26
#div z 1
x += 14 # add x 14
#eql x w
x = 1 #eql x 0
#mul y 0
y = 25 # add y 25
#mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 3 # add y 3
#mul y x
z += y #add z y
# OPTIMIZED:
# z *= 26
# z += w + 3
z = z * 26 + input[8] + 3
# END: DIGIT 9

# BEGIN: DIGIT 10
w = input[9] # inp w
#mul x 0
x = z # add x z
x %= 26 # mod x 26
z /= 26 # div z 26
x -= 1 # add x -1
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
#mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 10 # add y 10
y *= x # mul y x
z += y # add z y
# OPTIMIZED:
w = input[9]
x = z % 26 - 1
z /= 26
x = x == w ? 1 : 0
x = x == 0 ? 1 : 0
z = z * (25 * x + 1) + (w + 10) * x
# END: DIGIT 10

# BEGIN: DIGIT 11
w = input[10] # inp w
#mul x 0
x = z # add x z
x %= 26 # mod x 26
z /= 26 # div z 26
x -= 8 # add x -8
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
#mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 10 # add y 10
y *= x # mul y x
z += y # add z y
# OPTIMIZED:
w = input[10]
x = z % 26 - 8
z /= 26
x = x == w ? 0 : 1
z = z * (25 * x + 1) + (w + 10) * x
# END: DIGIT 11

# BEGIN: DIGIT 12
w = input[11] # inp w
#mul x 0
x = z # add x z
x %= 26 # mod x 26
z /= 26 # div z 26
x -= 5 # add x -5
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
#mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 14 # add y 14
y *= x # mul y x
z += y # add z y
# OPTIMIZED:
w = input[11]
x = z % 26 - 5
z /= 26
x = x == w ? 0 : 1
z = z * (25 * x + 1) + (w + 14) * x
# END: DIGIT 12

# BEGIN: DIGIT 13
w = input[12] # inp w
#mul x 0
x = z # add x z
x %= 26 # mod x 26
z /= 26 # div z 26
x -= 16 # add x -16
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
#mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 6 # add y 6
y *= x # mul y x
z += y # add z y
# OPTIMIZED:
w = input[12]
x = z % 26 - 16
z /= 26
x = x == w ? 0 : 1
z = z * (25 * x + 1) + (w + 6) * x
# END: DIGIT 13

# BEGIN: DIGIT 14
w = input[13] # inp w
#mul x 0
x = z # add x z
x %= 26 # mod x 26
z /= 26 # div z 26
x -= 6 # add x -6
x = x == w ? 1 : 0 # eql x w
x = x == 0 ? 1 : 0 # eql x 0
#mul y 0
y = 25 # add y 25
y *= x # mul y x
y += 1 # add y 1
z *= y # mul z y
#mul y 0
y = w # add y w
y += 5 # add y 5
y *= x # mul y x
z += y # add z y
# OPTIMIZED:
w = input[13]
x = z % 26 - 6
z /= 26
x = x == w ? 0 : 1
z = z * (25 * x + 1) + (w + 5) * x
# END: DIGIT 14
